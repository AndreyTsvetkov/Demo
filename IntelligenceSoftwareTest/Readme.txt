В этом решении использована следующая задача (текст задачи приведен ниже с подстрочными комментариями в контексте моего решения).
	→ Мои подстрочные комментарии помечены значком «→»
Модульные тесты написаны на NUnit, удобнее всего запустить через Resharper — «Resharper/Unit tests/Run all tests from solution»

	Задача 5. Поиск угловых точек в файле формата ASC

	Разработать консольное или с визуальным интерфейсом приложение asс2pnt.exe:
		→ оба интерфейса сделаны, управляется параметром /mode=console (default) или /mode=winforms
	
	Запускаемое на Windows с установленным Microsoft .NET Framework 3.5 и выше из командной строки. Пример вызова приведен в лист.1;
	Выполняющее проверку наличия установленного Microsoft .NET Framework;
	Формирующее сообщение пользователю что Microsoft .NET Framework не найден с аварийным завершением приложения;
		→ проверил на голом дистрибутиве XP; при тотальном отсутствии .net (даже 1.0) сообщение не очень вразумительное, при наличии хотя бы какой-нибудь версии — уже адекватное

	Загружающее координаты точек замкнутого объекта (рис.1) из файла формата ASC (лист.2) в виде непоследовательного их перечня. Но мы это уже сделали сами с помощью нейронной сети и поэтому исходными данными является растровое изображение (рис.1), а не перечень точек (лист.2);
		→ я нахожу второе предложение этого абзаца противоречащим заголовку задачи и первому предложению. 
		→ поэтому я сделал вариант, работающий именно с текстовым файлом;
		→ во всяком случае, вытащить из подобного графического файла границу не трудно, и после этого задача сведется к предыдущей;
		→ при необходимости это будет несложной доработкой. 

	Рассчитывающее угловые точки замкнутого объекта* (рис.2) с формированием результирующего файла (лист.3);

	При использовании WinForms необходимо показать действие алгоритма в реальном времени - вывод на PictureBox или на другую поверхность с масштабом 10:1 без размытия при увеличении.
		→ сделано. масштаб крупноват (для моего монитора). захотите сделать поменьше — константа scale в методе DemoForm::GetRectangleForPoint
	Обязательно в комментариях в исходном коде необходимо сформулировать принципы функционирования основного алгоритма.
		→ основной алгоритм описан в реализующем его файле TurnsDetector.cs

	Лист.1. Параметры запуска приложения если на входе файл формата ASC или растровое изображение
	asс2pnt.exe /in=".\src.asc" /out=".\res.asc" 
	или
	asс2pnt.exe /in=".\src.png" /out=".\res.asc"
		→ как указано выше, поддерживается только 1-й вариант
		→ файл с тестовыми данными приложен, при сборке приложения он окажется в среди результатов сборки, 
		→ при отладочном запуске через студию параметры настроены так, что он подцепится
		→ чтобы увидеть работу программы, открываете проект в студии и нажимаете F5.

	Лист.2. Исходные данные в виде перечня координат
	<!--
	1) координата X
	2) координата Y
	-->
	15 4
	...
	23 5
	Лист.3. Рассчитанные значения
	<!--
	1) координата X
	2) координата Y
	-->
	15 4
	15 10
	5 10
	5 17
	9 17
	9 21
	15 21
	16 17
	18 17
	18 21
	33 21
	33 16
	30 16
	30 9
	24 9
	24 6
	23 6
	23 5
	Язык и среда разработки: C#, Microsoft Visual Studio 2008 и выше.
	Срок выполнения задачи: 2 астрономических часа.
		→ основной алгоритм с тестами вышел около 2-х, потом еще куча разрозненных правок, winforms добавил, сделал внутренние структуры иммутабельными. суммарно часов 5 на все, включая генерацию файла с тестовыми данными. 